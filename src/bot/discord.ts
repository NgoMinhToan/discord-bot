import axios from 'axios';
import { Client, GatewayIntentBits } from 'discord.js';
import { addHistory } from './history';
import { broadcast } from './ws';
import { getChannelConfig } from './configChannel';

export const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent,
    ],
});

client.once('ready', () => {
    console.log(`ü§ñ Bot ƒë√£ ƒëƒÉng nh·∫≠p: ${client.user?.tag}`);
    broadcast(`[INFO] Bot ƒë√£ ƒëƒÉng nh·∫≠p: ${client.user?.tag}`);
});

client.on('messageCreate', async (msg) => {
    if (msg.author.bot) return;
    addHistory(msg.channelId, msg.author.username, msg.content);

    const config = getChannelConfig(msg.channelId);

    // N·∫øu b·∫≠t handleMessage, g·ª≠i webhook v√† ch·ªù callback
    if (config.handleMessage && config.webhookUrl) {
        try {
            // G·ª≠i ƒë·∫øn webhook ngo√†i
            await axios.post(config.webhookUrl, {
                channelId: msg.channelId,
                author: msg.author.username,
                content: msg.content,
                callbackUrl: `${process.env.PUBLIC_URL}/webhook-callback/${msg.channelId}/${msg.id}`
            });
        } catch (e) {
            console.error('G·ª≠i webhook th·∫•t b·∫°i:', e);
        }
        return; // Kh√¥ng reply ngay
    }

    // N·∫øu b·∫≠t reply, reply l·∫°i
    if (config.reply) {
        msg.reply(`B·∫°n v·ª´a n√≥i: "${msg.content}"`);
    }
    broadcast(`[MSG] ${msg.author.username}: ${msg.content}`);
});